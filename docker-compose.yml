version: '3.9'

services:
  postgres: 
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=carwash
    ports:
      - "5434:5432"
    volumes:
      - postgres-db:/var/lib/postgresql/data
    networks:
      - localeats
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  migrate-auth:
    image: migrate/migrate
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:root@postgres:5432/localeats?sslmode=disable",
      "up"
    ]
    volumes:
      - ./UserService/db/migrations:/migrations
    networks:
      - localeats
    depends_on:
      - postgres

  migrate-order:
    image: migrate/migrate
    command: [
      "-path", "/migrations",
      "-database", "postgres://postgres:root@postgres:5432/localeats?sslmode=disable",
      "up"
    ]
    volumes:
      - ./OrderService/db/migrations:/migrations
    networks:
      - localeats
    depends_on:
      - postgres

  redis:
    container_name: redis
    image: redis
    ports:
      - "6378:6379"
    volumes:
      - redis_volume_data:/data
    networks:
      - localeats
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  auth:
    container_name: auth
    build: ./UserService
    depends_on:
      - postgres
      - migrate-auth
    ports:
      - "7777:7777"
      - "8888:8888"
    networks:
     - localeats
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7777/health || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  order:
    container_name: order
    build: ./OrderService
    depends_on:
      - postgres
      - migrate-order
    ports:
      - "5555:5555"
    networks:
      - localeats
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5555/health || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  gateway:
    container_name: gateway
    build: ./api-getaway
    depends_on:
      - auth
      - order
      - redis
    ports:
      - "4444:4444"
    networks:
      - localeats
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4444/health || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

networks:
  localeats:
    driver: bridge

volumes:
  postgres-db:
  redis_volume_data:
