definitions:
  models.Error:
    properties:
      message:
        type: string
    type: object
  orders.BusiestHour:
    properties:
      hour:
        type: integer
      orders_count:
        type: integer
    type: object
  orders.CreateDishRequest:
    properties:
      available:
        type: boolean
      category:
        type: string
      description:
        type: string
      ingredients:
        items:
          type: string
        type: array
      kitchen_id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  orders.CreateOrderRequest:
    properties:
      delivery_address:
        type: string
      delivery_time:
        type: string
      items_id:
        type: string
      kitchen_id:
        type: string
      total_amount:
        type: number
      user_id:
        type: string
    type: object
  orders.CreateOrderResponse:
    properties:
      order:
        $ref: '#/definitions/orders.Order'
    type: object
  orders.CreatePaymentRequest:
    properties:
      amount:
        type: number
      card_number:
        type: string
      cvv:
        type: string
      expiry_date:
        type: string
      order_id:
        type: string
      payment_method:
        type: string
      user_id:
        type: string
    type: object
  orders.CreateReviewRequest:
    properties:
      comment:
        type: string
      kitchen_id:
        type: string
      order_id:
        type: string
      rating:
        type: number
      user_id:
        type: string
    type: object
  orders.CreateWorkingHoursRequest:
    properties:
      kitchen_id:
        type: string
      working_hours:
        additionalProperties:
          $ref: '#/definitions/orders.WorkingHours'
        type: object
    type: object
  orders.CreateWorkingHoursResponse:
    properties:
      created_at:
        type: string
      kitchen_id:
        type: string
      working_hours:
        additionalProperties:
          $ref: '#/definitions/orders.WorkingHours'
        type: object
    type: object
  orders.Dish:
    properties:
      available:
        type: boolean
      category:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      ingredients:
        items:
          type: string
        type: array
      kitchen_id:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  orders.FavoriteCuisine:
    properties:
      cuisine_type:
        type: string
      orders_count:
        type: integer
    type: object
  orders.FavoriteKitchen:
    properties:
      id:
        type: string
      name:
        type: string
      orders_count:
        type: integer
    type: object
  orders.GetDishesResponse:
    properties:
      dishes:
        items:
          $ref: '#/definitions/orders.Dish'
        type: array
    type: object
  orders.GetKitchenOrdersResponse:
    properties:
      orders:
        items:
          $ref: '#/definitions/orders.Order'
        type: array
    type: object
  orders.GetKitchenStatisticsResponse:
    properties:
      average_rating:
        type: number
      busiest_hours:
        items:
          $ref: '#/definitions/orders.BusiestHour'
        type: array
      top_dishes:
        items:
          $ref: '#/definitions/orders.TopDish'
        type: array
      total_orders:
        type: integer
      total_revenue:
        type: number
    type: object
  orders.GetOrderByIDResponse:
    properties:
      order:
        $ref: '#/definitions/orders.Order'
    type: object
  orders.GetReviewsResponse:
    properties:
      average_rating:
        type: number
      limit:
        type: integer
      offset:
        type: integer
      reviews:
        items:
          $ref: '#/definitions/orders.Review'
        type: array
      total:
        type: integer
    type: object
  orders.GetUserActivityResponse:
    properties:
      favorite_cuisines:
        items:
          $ref: '#/definitions/orders.FavoriteCuisine'
        type: array
      favorite_kitchens:
        items:
          $ref: '#/definitions/orders.FavoriteKitchen'
        type: array
      total_orders:
        type: integer
      total_spent:
        type: number
    type: object
  orders.GetUserOrdersResponse:
    properties:
      orders:
        items:
          $ref: '#/definitions/orders.Order'
        type: array
    type: object
  orders.Order:
    properties:
      created_at:
        type: string
      delivery_address:
        type: string
      delivery_time:
        type: string
      id:
        type: string
      items_id:
        type: string
      kitchen_id:
        type: string
      total_amount:
        type: number
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  orders.Payment:
    properties:
      amount:
        type: number
      created_at:
        type: string
      id:
        type: string
      order_id:
        type: string
      payment_method:
        type: string
      payment_status:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  orders.Review:
    properties:
      comment:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      kitchen_id:
        type: string
      order_id:
        type: string
      rating:
        type: number
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  orders.Status:
    properties:
      status:
        type: boolean
    type: object
  orders.TopDish:
    properties:
      id:
        type: string
      name:
        type: string
      orders_count:
        type: integer
      revenue:
        type: number
    type: object
  orders.UpdateDishRequest:
    properties:
      available:
        type: boolean
      category:
        type: string
      description:
        type: string
      id:
        type: string
      ingredients:
        items:
          type: string
        type: array
      name:
        type: string
      price:
        type: number
    type: object
  orders.UpdateOrderStatusRequest:
    properties:
      id:
        type: string
      status:
        type: string
    type: object
  orders.UpdateReviewRequest:
    properties:
      comment:
        type: string
      id:
        type: string
      kitchen_id:
        type: string
      order_id:
        type: string
      rating:
        type: number
      user_id:
        type: string
    type: object
  orders.UpdateWorkingHoursRequest:
    properties:
      kitchen_id:
        type: string
      working_hours:
        additionalProperties:
          $ref: '#/definitions/orders.WorkingHours'
        type: object
    type: object
  orders.UpdateWorkingHoursResponse:
    properties:
      kitchen_id:
        type: string
      updated_at:
        type: string
      working_hours:
        additionalProperties:
          $ref: '#/definitions/orders.WorkingHours'
        type: object
    type: object
  orders.WorkingHours:
    properties:
      close:
        type: string
      open:
        type: string
    type: object
  users.CreateKitchenRequest:
    properties:
      address:
        type: string
      cuisine_type:
        type: string
      description:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  users.GetKitchensResponse:
    properties:
      kitchens:
        items:
          $ref: '#/definitions/users.Kitchen'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  users.GetProfileResponse:
    properties:
      user:
        $ref: '#/definitions/users.User'
    type: object
  users.Kitchen:
    properties:
      address:
        type: string
      created_at:
        type: string
      cuisine_type:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      owner_id:
        type: string
      phone_number:
        type: string
      rating:
        type: number
      total_orders:
        type: integer
      updated_at:
        type: string
    type: object
  users.SearchKitchensResponse:
    properties:
      kitchens:
        items:
          $ref: '#/definitions/users.Kitchen'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  users.Status:
    properties:
      Status:
        type: boolean
    type: object
  users.UpdateKitchenRequest:
    properties:
      address:
        type: string
      cuisine_type:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  users.UpdateProfileRequest:
    properties:
      UserId:
        type: string
      address:
        type: string
      bio:
        type: string
      email:
        type: string
      full_name:
        type: string
      is_verified:
        type: boolean
      password:
        type: string
      phone:
        type: string
      specialties:
        type: string
      user_type:
        type: string
      username:
        type: string
      years_of_experience:
        type: integer
    type: object
  users.User:
    properties:
      address:
        type: string
      bio:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      is_verified:
        type: string
      password:
        type: string
      phone_number:
        type: string
      specialties:
        type: string
      updated_at:
        type: string
      user_type:
        type: string
      username:
        type: string
      years_of_experience:
        type: integer
    type: object
host: localhost:4444
info:
  contact: {}
  description: This is a sample server for Auth Service.
  title: Auth Service API
  version: "1.0"
paths:
  /api/v1/dishes:
    post:
      consumes:
      - application/json
      description: Create Dishes
      parameters:
      - description: Create Dishes
        in: body
        name: dishes
        required: true
        schema:
          $ref: '#/definitions/orders.CreateDishRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.Dish'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Create Dishes
      tags:
      - Dishes
  /api/v1/dishes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Dish
      parameters:
      - description: Delete Dish
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.Dish'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete Dish
      tags:
      - Dishes
    get:
      consumes:
      - application/json
      description: Get dish by id
      parameters:
      - description: Get dish by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.Dish'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get dish by id
      tags:
      - Dishes
  /api/v1/dishes/kitchen/{id}:
    get:
      consumes:
      - application/json
      description: Get Kitchen Dishes
      parameters:
      - description: Get Kitchen Dishes
        in: path
        name: id
        required: true
        type: string
      - description: Get Kitchen Dishes
        in: query
        name: limit
        type: string
      - description: Get Kitchen Dishes
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.GetDishesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Kitchen Dishes
      tags:
      - Dishes
  /api/v1/dishes/update:
    put:
      consumes:
      - application/json
      description: Update Dish
      parameters:
      - description: Update Dish
        in: body
        name: dish
        required: true
        schema:
          $ref: '#/definitions/orders.UpdateDishRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.Dish'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Update Dish
      tags:
      - Dishes
  /api/v1/extra/kitchens/{id}/statistics:
    get:
      consumes:
      - application/json
      description: Get Kitchen Statistics
      parameters:
      - description: Kitchen ID
        in: path
        name: id
        required: true
        type: string
      - description: Start Date
        in: query
        name: start_date
        required: true
        type: string
      - description: End Date
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.GetKitchenStatisticsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Kitchen Statistics
      tags:
      - Extra
  /api/v1/extra/kitchens/update/working-hours:
    put:
      consumes:
      - application/json
      description: Update Working Hours
      parameters:
      - description: Update Working Hours
        in: body
        name: working_hours
        required: true
        schema:
          $ref: '#/definitions/orders.UpdateWorkingHoursRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.UpdateWorkingHoursResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Update Working Hours
      tags:
      - Extra
  /api/v1/extra/kitchens/working-hours:
    post:
      consumes:
      - application/json
      description: create Kitchen Working Hours
      parameters:
      - description: Create Working Hours
        in: body
        name: working_hours
        required: true
        schema:
          $ref: '#/definitions/orders.CreateWorkingHoursRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.CreateWorkingHoursResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: create Kitchen Working Hours
      tags:
      - Extra
  /api/v1/extra/users/{id}/activity:
    get:
      consumes:
      - application/json
      description: Get User Activity
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Start Date
        in: query
        name: start_date
        required: true
        type: string
      - description: End Date
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.GetUserActivityResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get User Activity
      tags:
      - Extra
  /api/v1/kitchens:
    get:
      consumes:
      - application/json
      description: List Kitchens
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/users.GetKitchensResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: List Kitchens
      tags:
      - Kitchens
    post:
      consumes:
      - application/json
      description: Create Kitchen
      parameters:
      - description: Create Kitchen
        in: body
        name: kitchen
        required: true
        schema:
          $ref: '#/definitions/users.CreateKitchenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Kitchen'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Create Kitchen
      tags:
      - Kitchens
  /api/v1/kitchens/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Kitchen
      parameters:
      - description: Delete Kitchen
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Kitchen'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete Kitchen
      tags:
      - Kitchens
    get:
      consumes:
      - application/json
      description: Get Kitchen
      parameters:
      - description: Get Kitchen by id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Kitchen'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Kitchen by id
      tags:
      - Kitchens
    put:
      consumes:
      - application/json
      description: Update Kitchen
      parameters:
      - description: Update Kitchen
        in: body
        name: kitchen
        required: true
        schema:
          $ref: '#/definitions/users.UpdateKitchenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Kitchen'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Update Kitchen
      tags:
      - Kitchens
  /api/v1/kitchens/search:
    get:
      consumes:
      - application/json
      description: Search Kitchens
      parameters:
      - description: Search Kitchens
        in: query
        name: name
        type: string
      - description: Cuisine Type
        in: query
        name: cuisine_type
        type: string
      - description: Rating
        in: query
        name: rating
        type: number
      - description: Offset number
        in: query
        name: offset
        type: integer
      - description: Limit per offset
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.SearchKitchensResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Search Kitchens
      tags:
      - Kitchens
  /api/v1/orders:
    post:
      consumes:
      - application/json
      description: Create Order
      parameters:
      - description: Create Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/orders.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.CreateOrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Create Order
      tags:
      - Orders
  /api/v1/orders/{id}:
    get:
      consumes:
      - application/json
      description: Get Order By Id
      parameters:
      - description: Get Order By Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.GetOrderByIDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Order By Id
      tags:
      - Orders
  /api/v1/orders/kitchen/{id}:
    get:
      consumes:
      - application/json
      description: List Kitchen Orders
      parameters:
      - description: List Kitchen Orders
        in: path
        name: id
        required: true
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.GetKitchenOrdersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: List Kitchen Orders
      tags:
      - Orders
  /api/v1/orders/status:
    put:
      consumes:
      - application/json
      description: Update Order Status
      parameters:
      - description: Update Order Status
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/orders.UpdateOrderStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      tags:
      - Orders
  /api/v1/orders/user/{id}:
    get:
      consumes:
      - application/json
      description: Get User Orders
      parameters:
      - description: Get User Order
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.GetUserOrdersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get User Orders
      tags:
      - Orders
  /api/v1/payments:
    post:
      consumes:
      - application/json
      description: CreatePayment
      parameters:
      - description: Payment
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/orders.CreatePaymentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.Payment'
      security:
      - ApiKeyAuth: []
      summary: CreatePayment
      tags:
      - payment
  /api/v1/payments/{orderID}:
    get:
      consumes:
      - application/json
      description: GetPayment
      parameters:
      - description: Payment
        in: path
        name: orderID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.Payment'
      security:
      - ApiKeyAuth: []
      summary: GetPayment
      tags:
      - payment
  /api/v1/reviews:
    post:
      consumes:
      - application/json
      description: Create Review
      parameters:
      - description: Create Review
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/orders.CreateReviewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.Review'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Create Review
      tags:
      - Reviews
    put:
      consumes:
      - application/json
      description: Update Review
      parameters:
      - description: Update Review
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/orders.UpdateReviewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Update Review
      tags:
      - Reviews
  /api/v1/reviews/{KitchenId}:
    get:
      consumes:
      - application/json
      description: Get Review
      parameters:
      - description: Get Review about Kitchen
        in: path
        name: KitchenId
        required: true
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.GetReviewsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Review
      tags:
      - Reviews
  /api/v1/reviews/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Review
      parameters:
      - description: Delete Review
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/orders.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete Review
      tags:
      - Reviews
  /api/v1/users/profile/{id}:
    delete:
      consumes:
      - application/json
      description: delete profile
      parameters:
      - description: Delete Profile
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: delete profile
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get Profile
      parameters:
      - description: Get Profile
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Profile
      tags:
      - users
  /api/v1/users/profile/update:
    put:
      consumes:
      - application/json
      description: update profile
      parameters:
      - description: Update Profile
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.GetProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      security:
      - ApiKeyAuth: []
      summary: update profile
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
