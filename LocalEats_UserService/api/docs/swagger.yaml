definitions:
  models.Error:
    properties:
      error:
        type: string
    type: object
  users.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  users.LogoutRequest:
    properties:
      email:
        type: string
    type: object
  users.RegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      user_type:
        type: string
      username:
        type: string
    type: object
  users.Status:
    properties:
      Status:
        type: boolean
    type: object
  users.Token:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
host: localhost:7777
info:
  contact:
    email: azizbekqobulov05@gmail.com
    name: Azizbek
    url: http://www.support_me_with_smile
  description: This is the Auth service of LocalEats project
  title: Auth Service
  version: "1.0"
paths:
  /api/v1/auth/forgot-password/{email}:
    post:
      consumes:
      - application/json
      description: to forgot password in the SitAndEat app
      parameters:
      - description: email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/users.Status'
      summary: Forgot Password
      tags:
      - Auth
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: to login user in the SitAndEat app
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: Login User
      tags:
      - Auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: to logout user in the SitAndEat app
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/users.Status'
      summary: Logout User
      tags:
      - Auth
  /api/v1/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: to refresh token in the LocalEats app
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/users.Status'
      summary: Refresh Token
      tags:
      - Auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: to register user in the SitAndEat app
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/users.Status'
      summary: Register User
      tags:
      - Auth
  /api/v1/auth/reset-password/{email}/{code}/{password}:
    post:
      consumes:
      - application/json
      description: to reset password in the SitAndEat app
      parameters:
      - description: email
        in: path
        name: email
        required: true
        type: string
      - description: enter code from email
        in: path
        name: code
        required: true
        type: string
      - description: new password
        in: path
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/users.Status'
      summary: Reset Password
      tags:
      - Auth
swagger: "2.0"
